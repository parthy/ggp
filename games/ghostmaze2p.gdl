; ghostmaze2p
(role explorer)
(role ghost)
(init (location explorer 2 6))
(init (location ghost 7 3))
(init (location exit 8 8))
(init (blockednorth 3 1))
(init (blockednorth 4 1))
(init (blockednorth 5 1))
(init (blockednorth 8 1))
(init (blockednorth 7 2))
(init (blockednorth 4 3))
(init (blockednorth 7 3))
(init (blockednorth 2 4))
(init (blockednorth 3 4))
(init (blockednorth 8 4))
(init (blockednorth 1 5))
(init (blockednorth 4 5))
(init (blockednorth 7 5))
(init (blockednorth 2 6))
(init (blockednorth 6 6))
(init (blockednorth 8 6))
(init (blockednorth 4 7))
(init (blockednorth 6 7))
(init (blockedeast 1 2))
(init (blockedeast 1 4))
(init (blockedeast 1 7))
(init (blockedeast 1 8))
(init (blockedeast 2 2))
(init (blockedeast 2 8))
(init (blockedeast 3 1))
(init (blockedeast 3 4))
(init (blockedeast 3 5))
(init (blockedeast 3 6))
(init (blockedeast 4 2))
(init (blockedeast 4 8))
(init (blockedeast 5 5))
(init (blockedeast 6 8))
(init (control explorer))
(init (step 1))
(<= (legal explorer (move ?dir))
    (true (control explorer))
    (true (location explorer ?x ?y))
    (legalstep ?dir ?x ?y)
    (distinct ?dir nowhere))
(<= (legal explorer (move nowhere))
    (not (true (control explorer))))
(<= (legal ghost (move ?dir))
    (true (control ghost))
    (true (location ghost ?x1 ?y1))
    (nextcell ?dir ?x1 ?y1 ?x2 ?y2)
    (cell ?x2 ?y2))
(<= (legal ghost dropslime)
    (true (control ghost)))
(<= (legal ghost (move nowhere))
    (not (true (control ghost))))
(<= (next (control explorer))
    (true (control ghost)))
(<= (next (control ghost))
    (true (control explorer)))
(<= (next (location exit ?x ?y))
    (true (location exit ?x ?y)))
(<= (next (blockednorth ?x ?y))
    (true (blockednorth ?x ?y)))
(<= (next (blockedeast ?x ?y))
    (true (blockedeast ?x ?y)))
(<= (next (location explorer ?x2 ?y2))
    (true (location explorer ?x1 ?y1))
    (does explorer (move ?dir))
    (nextcell ?dir ?x1 ?y1 ?x2 ?y2))
(<= (next (location ghost ?x2 ?y2))
    (true (location ghost ?x1 ?y1))
    (does ghost (move ?dir))
    (nextcell ?dir ?x1 ?y1 ?x2 ?y2))
(<= (next (location ghost ?x ?y))
    (true (location ghost ?x ?y))
    (does ghost dropslime))
(<= (next (location slime ?x ?y))
    (true (location ghost ?x ?y))
    (does ghost dropslime))
(<= (next (location slime ?x ?y))
    (true (location slime ?x ?y)))
(<= (next (step ?n++))
    (true (step ?n))
    (succ ?n ?n++))
(<= terminal
    melted)
(<= terminal
    atexit)
(<= terminal
    timeout)
(<= (goal explorer 0)
    melted)
(<= (goal explorer 0)
    (not atexit)
    (not melted)
    (not timeout))
(<= (goal explorer 50)
    timeout
    (not atexit)
    (not melted))
(<= (goal explorer 100)
    atexit
    (not melted))
(<= (goal ghost 0)
    atexit
    (not melted))
(<= (goal ghost 0)
    (not atexit)
    (not melted)
    (not timeout))
(<= (goal ghost 50)
    timeout
    (not atexit)
    (not melted))
(<= (goal ghost 100)
    melted)
(<= (legalstep north ?x ?y)
    (++ ?y ?ynew)
    (cell ?x ?ynew)
    (not (blocked ?x ?y ?x ?ynew)))
(<= (legalstep south ?x ?y)
    (-- ?y ?ynew)
    (cell ?x ?ynew)
    (not (blocked ?x ?y ?x ?ynew)))
(<= (legalstep east ?x ?y)
    (++ ?x ?xnew)
    (cell ?xnew ?y)
    (not (blocked ?x ?y ?xnew ?y)))
(<= (legalstep west ?x ?y)
    (-- ?x ?xnew)
    (cell ?xnew ?y)
    (not (blocked ?x ?y ?xnew ?y)))
(<= (legalstep nowhere ?x ?y)
    (cell ?x ?y))
(<= (nextcell north ?x ?y ?x ?ynew)
    (index ?x)
    (++ ?y ?ynew))
(<= (nextcell south ?x ?y ?x ?ynew)
    (index ?x)
    (-- ?y ?ynew))
(<= (nextcell east ?x ?y ?xnew ?y)
    (index ?y)
    (++ ?x ?xnew))
(<= (nextcell west ?x ?y ?xnew ?y)
    (index ?y)
    (-- ?x ?xnew))
(<= (nextcell nowhere ?x ?y ?x ?y)
    (cell ?x ?y))
(<= (blocked ?x ?y1 ?x ?y2)
    (true (blockednorth ?x ?y1))
    (++ ?y1 ?y2))
(<= (blocked ?x ?y2 ?x ?y1)
    (true (blockednorth ?x ?y1))
    (++ ?y1 ?y2))
(<= (blocked ?x1 ?y ?x2 ?y)
    (true (blockedeast ?x1 ?y))
    (++ ?x1 ?x2))
(<= (blocked ?x2 ?y ?x1 ?y)
    (true (blockedeast ?x1 ?y))
    (++ ?x1 ?x2))
(<= (distinctcell ?x1 ?y1 ?x2 ?y2)
    (cell ?x1 ?y1)
    (cell ?x2 ?y2)
    (distinct ?x1 ?x2))
(<= (distinctcell ?x1 ?y1 ?x2 ?y2)
    (cell ?x1 ?y1)
    (cell ?x2 ?y2)
    (distinct ?y1 ?y2))
(<= atexit
    (true (location explorer ?x ?y))
    (true (location exit ?x ?y)))
(<= melted
    (true (location explorer ?x ?y))
    (true (location slime ?x ?y)))
(<= timeout
    (true (step 50)))
(index 1)
(index 2)
(index 3)
(index 4)
(index 5)
(index 6)
(index 7)
(index 8)
(cell 1 8)
(cell 2 8)
(cell 3 8)
(cell 4 8)
(cell 5 8)
(cell 6 8)
(cell 7 8)
(cell 8 8)
(cell 1 7)
(cell 2 7)
(cell 3 7)
(cell 4 7)
(cell 5 7)
(cell 6 7)
(cell 7 7)
(cell 8 7)
(cell 1 6)
(cell 2 6)
(cell 3 6)
(cell 4 6)
(cell 5 6)
(cell 6 6)
(cell 7 6)
(cell 8 6)
(cell 1 5)
(cell 2 5)
(cell 3 5)
(cell 4 5)
(cell 5 5)
(cell 6 5)
(cell 7 5)
(cell 8 5)
(cell 1 4)
(cell 2 4)
(cell 3 4)
(cell 4 4)
(cell 5 4)
(cell 6 4)
(cell 7 4)
(cell 8 4)
(cell 1 3)
(cell 2 3)
(cell 3 3)
(cell 4 3)
(cell 5 3)
(cell 6 3)
(cell 7 3)
(cell 8 3)
(cell 1 2)
(cell 2 2)
(cell 3 2)
(cell 4 2)
(cell 5 2)
(cell 6 2)
(cell 7 2)
(cell 8 2)
(cell 1 1)
(cell 2 1)
(cell 3 1)
(cell 4 1)
(cell 5 1)
(cell 6 1)
(cell 7 1)
(cell 8 1)
(++ 1 2)
(++ 2 3)
(++ 3 4)
(++ 4 5)
(++ 5 6)
(++ 6 7)
(++ 7 8)
(-- 8 7)
(-- 7 6)
(-- 6 5)
(-- 5 4)
(-- 4 3)
(-- 3 2)
(-- 2 1)
(succ 1 2)
(succ 2 3)
(succ 3 4)
(succ 4 5)
(succ 5 6)
(succ 6 7)
(succ 7 8)
(succ 8 9)
(succ 9 10)
(succ 10 11)
(succ 11 12)
(succ 12 13)
(succ 13 14)
(succ 14 15)
(succ 15 16)
(succ 16 17)
(succ 17 18)
(succ 18 19)
(succ 19 20)
(succ 20 21)
(succ 21 22)
(succ 22 23)
(succ 23 24)
(succ 24 25)
(succ 25 26)
(succ 26 27)
(succ 27 28)
(succ 28 29)
(succ 29 30)
(succ 30 31)
(succ 31 32)
(succ 32 33)
(succ 33 34)
(succ 34 35)
(succ 35 36)
(succ 36 37)
(succ 37 38)
(succ 38 39)
(succ 39 40)
(succ 40 41)
(succ 41 42)
(succ 42 43)
(succ 43 44)
(succ 44 45)
(succ 45 46)
(succ 46 47)
(succ 47 48)
(succ 48 49)
(succ 49 50)